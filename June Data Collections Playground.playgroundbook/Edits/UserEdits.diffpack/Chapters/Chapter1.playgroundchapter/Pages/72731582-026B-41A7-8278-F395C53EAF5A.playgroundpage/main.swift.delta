<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

struct Person: Comparable, Equatable, CustomStringConvertible, Codable {
    let firstName: String
    let lastName: String
    let address: String
    
    var description: String {
        "Person: \(firstName) \(lastName) \(address)"
    }
    static func ==(lhs: Person, rhs: Person) -&gt; Bool {
        lhs.firstName == rhs.firstName &amp;&amp; lhs.lastName == rhs.lastName
    }
    static func &lt; (lhs: Person, rhs: Person) -&gt; Bool {
        lhs.firstName &lt; rhs.firstName
    }
}


let person = Person(firstName: "Famous", lastName: "Amos", address: "1234 Cookie Lane")
let jsonEncoder = JSONEncoder()
jsonEncoder.outputFormatting = .prettyPrinted
let plistEncoder = PropertyListEncoder()
plistEncoder.outputFormat = .xml

if let personData = try? jsonEncoder.encode(person), let json = String(data: personData, encoding: .utf8) {
    print(json)
}

print("\n//////////////////// \n////////////////////\n")

if let plistPerson = try? plistEncoder.encode(person), let plist = String(data: plistPerson, encoding: .utf8) {
    print(plist)
}
</string>
			<key>ModifiedRange</key>
			<string>{0, 1054}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
